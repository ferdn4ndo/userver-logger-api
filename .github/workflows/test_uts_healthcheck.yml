name: UTs & Health Check

on:
  push:
    branches:
      - master
      - main
    paths-ignore:
      - '**.md'
    tags-ignore:
      - '**'
  pull_request:
    paths-ignore:
      - '**.md'

jobs: # Docs: <https://git.io/JvxXE>
  build-image-healthcheck-and-uts:
    name: Build image, health check and run UTs
    runs-on: ubuntu-20.04
    env:
      CONTAINER_NAME: userver-logger-api
      AUTH_USERNAME: test
      AUTH_PASSWORD: test
      DATA_FOLDER: /home/runner/work/userver-logger-api/userver-logger-api/data
      LOG_FILES_FOLDER: /home/runner/work/userver-logger-api/userver-logger-api/data
      FIXTURE_FOLDER: /home/runner/work/userver-logger-api/userver-logger-api/fixture
      CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Build docker image
        run: >
          docker build
          --file ./Dockerfile
          --tag userver-logger-api:local
          --build-arg BUILD_DATE=$(date -u +'%Y-%m-%dT%H:%M:%SZ')
          --build-arg BUILD_VERSION=${{ github.event.release.tag_name }}
          --build-arg VCS_REF=${GITHUB_SHA}
          .

      - name: Creating directories
        run: mkdir -p "$LOG_FILES_FOLDER"

      - name: Copying sample log file
        run: curl -sL https://raw.githubusercontent.com/ferdn4ndo/userver-logger-api/main/fixture/sample-app.log > "$LOG_FILES_FOLDER/sample-app.log"

      - name: Try to run container
        run: docker run -d --rm -p 5555:5555 -v "$LOG_FILES_FOLDER":/log_files --env BASIC_AUTH_USERNAME="$AUTH_USERNAME" --env BASIC_AUTH_PASSWORD="$AUTH_PASSWORD" --env DATA_FOLDER="$DATA_FOLDER" --name "$CONTAINER_NAME" userver-logger-api:local

      - name: Wait for healthy status
        run: while [ "`docker inspect -f {{.State.Health.Status}} $CONTAINER_NAME`" != "healthy" ]; do sleep 5; done

      - name: Execute test call
        run: curl http://localhost:5555/health

      - name: Run UTs with coverage check
        run: docker exec -i "$CONTAINER_NAME" sh -c "./scripts/run_all_tests_with_coverage.sh"

      - name: Copy coverage report file
        run: docker cp "$CONTAINER_NAME":"$DATA_FOLDER/coverage.txt" ./coverage.txt

      - name: View report
        run: cat ./coverage.txt

      - name: Upload coverage report
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./coverage.txt
          flags: unittests
          name: codecov-userver-logger-api
          fail_ci_if_error: true
          verbose: true
